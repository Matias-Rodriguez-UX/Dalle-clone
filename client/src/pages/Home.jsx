import React, { useState, useEffect } from 'react'
import { Loader, Card, FormField } from '../components'
import RenderCards from '../components/RenderCards'

const Home = () => {
    const [loading, setLoading] = useState(false)
    const [allPost, setAllPost] = useState(null)
    const [searchText, setSearchText] = useState('')
    const [filterResults, setFilterResults] = useState(null)
    const [searchTimeout, setSearchTimeout] = useState(null)

    useEffect(() => {
        const fetchPosts = async () => {
            setLoading(true)
            try {
                const response = await fetch('https://dall-e-v5oc.onrender.com/api/v1/post', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                })
                if (response.ok) {
                    const result = await response.json()
                    setAllPost(result.data.reverse())
                }

            } catch (error) {

            } finally {
                setLoading(false)
            }
        }

        fetchPosts()
    }, [])

    const handleSearchChange = (e) => {
        clearTimeout(searchTimeout)
        e.preventDefault()
        setSearchText(e.target.value)
        setSearchTimeout(
            setTimeout(() => {
                const searchResults = allPost.filter((post) => post.prompt.toLowerCase().includes(searchText.toLowerCase()) || post.name.toLowerCase().includes(searchText.toLowerCase()))
                setFilterResults(searchResults)
            }, 500)
        )
    }

    return (

        <section className='max-w-7xl mx-auto'>
            <div>
                <h1 className='font-extrabold text-[#222328] text-[2rem]'>
                    The Community Showcase
                </h1>
                <p className='mt-2 text-[#666e75] text-[1.1rem] max-w-[500px]'>
                    Browse through a collection of imaginative and visually stunning images generated by Dall-E AI
                </p>
            </div>
            <div className='mt-16'>
                <FormField
                    labelName='Search Posts'
                    type="text"
                    name="search"
                    placeholder="Search posts"
                    value={searchText}
                    handleChange={handleSearchChange}
                />
            </div>

            <div className='mt-10'>
                {loading ? (<div className='flex justify-center items-center'> <Loader /> </div>) :
                    <>
                        {
                            searchText && (
                                <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                                    Showing results for <span className='text-[#222328]'>{searchText}</span>
                                </h2>
                            )
                        }
                        <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
                            {searchText ? (
                                <RenderCards data={filterResults} title="No search results found" />
                            ) : (
                                <RenderCards data={allPost} title={"No post found"} />
                            )}
                        </div>
                    </>
                }
            </div>

        </section>

    )
}

export default Home